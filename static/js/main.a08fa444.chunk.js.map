{"version":3,"sources":["components/GlobalStyles.js","animation.js","api.js","components/Image.js","components/ImageList.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","popup","hidden","opacity","scale","show","transition","duration","exit","getImage","count","a","axios","get","response","data","console","error","Container","styled","motion","div","Image","imageURL","description","photographer","variants","initial","animate","src","alt","className","ImageList","useState","images","setImages","setCount","getData","results","useEffect","dataLength","length","next","hasMore","loader","columnsCountBreakPoints","350","750","900","map","item","urls","regular","alt_description","user","name","id","Wrapper","Title","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAqDeA,EAnDMC,YAAH,gyB,QCFLC,EAAQ,CACnBC,OAAQ,CACNC,QAAS,EACTC,MAAO,IAETC,KAAM,CACJF,QAAS,EACTC,MAAO,EACPE,WAAY,CACVC,SAAU,KAEZC,KAAM,CACJL,QAAS,EACTG,WAAY,CAAEC,SAAU,Q,yDCGfE,EAXD,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEUC,IAAMC,IAAN,6FACiEH,IAH3E,cAEPI,EAFO,yBAKNA,EAASC,MALH,gCAObC,QAAQC,MAAR,MAPa,yDAAH,sD,OCcRC,EAAYC,YAAOC,IAAOC,IAAdF,CAAH,8yBA6CAG,EA3DD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACtC,OACE,eAACP,EAAD,CAAWQ,SAAUzB,EAAO0B,QAAQ,SAASC,QAAQ,OAArD,UACE,qBAAKC,IAAKN,EAAUO,IAAKN,GAAe,YACxC,qBAAKO,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,4BAAIP,GAAe,mBACnB,4CAAeC,c,yBCkCVO,EAvCG,WAChB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,GAAnC,mBAAOvB,EAAP,KAAc0B,EAAd,KAEMC,EAAO,uCAAG,4BAAA1B,EAAA,sEACQF,EAASC,GADjB,OACR4B,EADQ,OAEdH,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,YAA2BI,OACrCF,EAAS1B,EAAQ,GAHH,2CAAH,qDASb,OAJA6B,qBAAU,WAERF,MACC,IAED,8BACE,cAAC,IAAD,CACEG,WAAYN,EAAOO,OACnBC,KAAML,EACNM,SAAS,EACTC,OAAQ,4CAJV,SAME,cAAC,oBAAD,CAAmBC,wBAAyB,CAAEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GAAnE,SACE,cAAC,IAAD,UACGd,EAAOO,OAAS,GACfP,EAAOe,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACE3B,SAAU2B,EAAKC,KAAKC,QACpB5B,YAAa0B,EAAKG,gBAElB5B,aAAcyB,EAAKI,KAAKC,MADnBL,EAAKM,gBCjBtBC,EAAUtC,YAAOC,IAAOC,IAAdF,CAAH,8FAMPuC,EAAQvC,YAAOC,IAAOC,IAAdF,CAAH,+JAUIwC,EA3BF,WACX,OACE,eAACF,EAAD,WACE,cAACC,EAAD,CAAOhC,SAAUzB,EAAO0B,QAAQ,SAASC,QAAQ,OAAjD,SACE,2CAEF,cAAC,EAAD,QCCSgC,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a08fa444.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n*{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing: border-box;\r\n}\r\nhtml{\r\n    &::-webkit-scrollbar{\r\n        width: 0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color:darkgrey;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n    background-color: white;\r\n  }\r\n}\r\n\r\nbody{\r\n    width:100%;\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: rgb(248, 241, 227);\r\n}\r\nh2{\r\n    font-size:5rem;\r\n    font-weight:lighter;\r\n    color:#333;\r\n    font-family: 'Girassol', cursive;\r\n}\r\nh3{\r\n    font-size:1.3rem;\r\n    color: #333;\r\n    padding:1.5rem 0rem;\r\n}\r\np{\r\n    font-size:1.2rem;\r\n    line-height:200%;\r\n    color:#696969;\r\n}\r\na{\r\n    text-decoration:none;\r\n    color: #333;\r\n}\r\nimg{\r\n    display:block;\r\n}\r\ninput{\r\n    font-weight: bold;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","export const popup = {\r\n  hidden: {\r\n    opacity: 0,\r\n    scale: 0.5,\r\n  },\r\n  show: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      duration: 0.75,\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transition: { duration: 0.75 },\r\n    },\r\n  },\r\n};\r\n","import axios from \"axios\";\r\n\r\n//Base URl\r\nconst accessKey = process.env.REACT_APP_API_KEY;\r\n//const base_url = `https://api.unsplash.com/photos/?client_id=${accessKey}`;\r\nconst getImage = async (count) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://5odqlhl1wf.execute-api.ca-central-1.amazonaws.com/default/getUnsplash?page=${count}`\r\n    );\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport default getImage;\r\n","//styles\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { popup } from \"../animation\";\r\n\r\nconst Image = ({ imageURL, description, photographer }) => {\r\n  return (\r\n    <Container variants={popup} initial=\"hidden\" animate=\"show\">\r\n      <img src={imageURL} alt={description || \"toronto\"} />\r\n      <div className=\"overlay\">\r\n        <div className=\"details\">\r\n          <p>{description || \"No description\"}</p>\r\n          <p>Posted by: {photographer}</p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled(motion.div)`\r\n  position: relative;\r\n  text-align: left;\r\n  margin: 1em;\r\n  img {\r\n    background-color: #eee;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 10;\r\n    right: 0;\r\n    height: 0;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: 0.5s ease;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.7) 0%,\r\n      rgba(255, 255, 255, 0.7) 50%,\r\n      rgb(255, 255, 255, 0.7) calc(50%)\r\n    );\r\n    .details {\r\n      position: absolute;\r\n      top: 8px;\r\n      left: 20px;\r\n      color: black;\r\n      font-weight: bold;\r\n      overflow-y: hidden;\r\n    }\r\n    p {\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  &:hover .overlay {\r\n    opacity: 1;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default Image;\r\n","import { useEffect, useState } from \"react\";\r\nimport getImage from \"../api\";\r\nimport Image from \"./Image\";\r\n//styles\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst ImageList = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const getData = async () => {\r\n    const results = await getImage(count);\r\n    setImages((images) => [...images, ...results]);\r\n    setCount(count + 1);\r\n  };\r\n  useEffect(() => {\r\n    //setCount(1);\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <InfiniteScroll\r\n        dataLength={images.length} //This is important field to render the next data\r\n        next={getData}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\r\n          <Masonry>\r\n            {images.length > 0 &&\r\n              images.map((item) => (\r\n                <Image\r\n                  imageURL={item.urls.regular}\r\n                  description={item.alt_description}\r\n                  key={item.id}\r\n                  photographer={item.user.name}\r\n                />\r\n              ))}\r\n          </Masonry>\r\n        </ResponsiveMasonry>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageList;\r\n","//styles\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { popup } from \"../animation\";\r\n\r\nimport ImageList from \"../components/ImageList\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Title variants={popup} initial=\"hidden\" animate=\"show\">\r\n        <h2>Toronto</h2>\r\n      </Title>\r\n      <ImageList />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(motion.div)`\r\n  max-width: 1500px;\r\n  margin: 40px auto;\r\n  overflow-y:hidden;\r\n`;\r\n\r\nconst Title = styled(motion.div)`\r\n  font-size: 10rem;\r\n  h2 {\r\n    margin: 3rem 0;\r\n    letter-spacing: 0.2rem;\r\n    text-align: center;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","//styles\r\nimport GlobalStyles from \"./components/GlobalStyles\";\r\n//pages and components\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyles />\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}